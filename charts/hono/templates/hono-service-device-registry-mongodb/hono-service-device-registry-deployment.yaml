{{- if and .Values.deviceRegistryExample.enabled ( eq .Values.deviceRegistryExample.type "mongodb" ) }}
#
# Copyright (c) 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
{{- $args := dict "dot" . "component" "service-device-registry" "name" "service-device-registry" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- include "hono.metadata" $args | nindent 2 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "hono.matchLabels" $args | nindent 6 }}
  template:
    metadata:
      {{- include "hono.metadata" $args | nindent 6 }}
    spec:
      containers:
      {{- include "hono.jaeger.agent" . | indent 6 }}
      - image: {{ include "hono.image" ( dict "dot" . "component" .Values.deviceRegistryExample.mongoDBBasedDeviceRegistry ) }}
        imagePullPolicy: IfNotPresent
        name: eclipse-hono-service-device-registry
        ports:
          - name: health
            containerPort: {{ .Values.healthCheckPort }}
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          - name: amqps
            containerPort: 5671
            protocol: TCP
          - name: amqp
            containerPort: 5672
            protocol: TCP
        env:
        - name: SPRING_CONFIG_LOCATION
          value: file:///etc/hono/
        - name: SPRING_PROFILES_ACTIVE
          value: dev
        - name: LOGGING_CONFIG
          value: {{ default "classpath:logback-spring.xml" .Values.deviceRegistryExample.loggingConfig | quote }}
        - name: JDK_JAVA_OPTIONS
          value: {{ .Values.deviceRegistryExample.javaOptions | quote }}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- include "hono.jaeger.clientConf" $args | indent 8 }}
        securityContext:
          privileged: false
        volumeMounts:
        {{- include "hono.container.secretVolumeMounts" ( dict "name" $args.name "conf" .Values.deviceRegistryExample ) | indent 8 }}
        {{- with .Values.deviceRegistryExample.resources }}
        resources:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /liveness
            port: health
            scheme: HTTPS
          initialDelaySeconds: 180
        readinessProbe:
            httpGet:
              path: /readiness
              port: health
              scheme: HTTPS
            initialDelaySeconds: 100
      volumes:
      {{- include "hono.pod.secretVolumes" ( dict "releaseName" .Release.Name "name" $args.name "conf" .Values.deviceRegistryExample ) | indent 6 }}
{{- end }}
