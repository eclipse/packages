# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
{{- if .Values.nginx.enabled -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nginx-conf
  labels:
    app.kubernetes.io/name: {{ include "ditto.name" . }}-nginx-conf
{{ include "ditto.labels" . | indent 4 }}
data:
  nginx.conf: |-
    worker_processes 1;
    pid /run/nginx/nginx.pid;
    
    events {worker_connections 1024;}
    
    http {
      charset utf-8;
      default_type application/json;
      include mime.types;
    
      # timeouts are configured slightly higher than ditto-eclipse-ditto-gateway read-timeout of 60 seconds
      proxy_connect_timeout 70; # seconds, default: 60
      proxy_send_timeout 70; # seconds, default: 60
      proxy_read_timeout 70; # seconds, default: 60
      send_timeout 70; # seconds, default: 60
    
      client_header_buffer_size 8k; # allow longer URIs + headers (default: 1k)
      large_client_header_buffers 4 16k;
    
      merge_slashes off; # allow multiple slashes for CRS Authentication
    
      upstream {{ include "ditto.fullname" . }}-gateway {
        server {{ include "ditto.fullname" . }}-gateway:8080;
      }
    
      server {
        listen 8080;
        server_name localhost;
    
        location / {
          index index.html;
        }
    
        # api
        location /api {
          include nginx-cors.conf;

          {{ if .Values.global.jwtOnly -}}
          proxy_pass_request_headers    on;
          proxy_set_header              Authorization             $http_authorization;
          {{ else }}
          auth_basic                    "Authentication required";
          auth_basic_user_file          nginx.htpasswd;
          proxy_set_header              X-Forwarded-User           $remote_user;
          proxy_set_header              x-ditto-pre-authenticated "nginx:${remote_user}";
          {{- end }}
        
          proxy_pass                    http://{{ include "ditto.fullname" . }}-gateway;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
    
          proxy_set_header Connection  '';
          chunked_transfer_encoding    off;
          proxy_buffering              off;
          proxy_cache                  off;
        }
    
        # ws
        location /ws {

          {{ if .Values.global.jwtOnly -}}
          proxy_pass_request_headers    on;
          proxy_set_header              Authorization             $http_authorization;
          {{ else }}
          auth_basic                    "Authentication required";
          auth_basic_user_file          nginx.htpasswd;
          proxy_set_header              X-Forwarded-User           $remote_user;
          proxy_set_header              x-ditto-pre-authenticated "nginx:${remote_user}";
          {{- end }}
          
          proxy_pass                    http://{{ include "ditto.fullname" . }}-gateway;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
    
          proxy_set_header              Upgrade                   $http_upgrade;
          proxy_set_header              Connection                "upgrade";
          proxy_read_timeout            1d;
          proxy_send_timeout            1d;
        }
    
        # health
        location /health {
          include nginx-cors.conf;
    
          proxy_pass                    http://{{ include "ditto.fullname" . }}-gateway/health;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }
    
        # status
        location /status {
          include nginx-cors.conf;
    
          proxy_pass                    http://{{ include "ditto.fullname" . }}-gateway/overall/status;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }

        # stats
        location /stats {
          include nginx-cors.conf;

          proxy_pass                    http://{{ include "ditto.fullname" . }}-gateway/stats;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }
    
        # devops
        location /devops {
          include nginx-cors.conf;

          proxy_pass                    http://{{ include "ditto.fullname" . }}-gateway/devops;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }

        {{ if .Values.swaggerui.enabled -}}
        # swagger
        # access API doc on: /apidoc/2
        location /apidoc/ {
          rewrite ^/apidoc/([0-9])$ $scheme://$http_host/apidoc/?url=//raw.githubusercontent.com/eclipse/ditto/{{ .Chart.AppVersion }}/documentation/src/main/resources/openapi/ditto-api-$1.yml  redirect;
          proxy_pass                    http://{{ include "ditto.fullname" . }}-swaggerui:8080/;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
        }
        {{- end }}
      }
    }

{{- end }}
