# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
---
# Default values for ditto.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

serviceAccount:
  ## create controls whether a service account should be created
  create: true
  ## name of the service account to use
  ## If not set and create is true, a name is generated using the fullname template
  name:

rbac:
  ## enabled controls whether RBAC resources will be created
  enabled: true

nameOverride: ""
fullnameOverride: ""

## dbconfig for mongodb connections
## will be handled as k8s secret as connection uri might contain auth credentials
dbconfig:
  concierge:
    uri: mongodb://ditto-mongodb:27017/concierge
    ssl: false
  connectivity:
    uri: mongodb://ditto-mongodb:27017/connectivity
    ssl: false
  things:
    uri: mongodb://ditto-mongodb:27017/things
    ssl: false
  searchDB:
    uri: mongodb://ditto-mongodb:27017/searchDB
    ssl: false
  policies:
    uri: mongodb://ditto-mongodb:27017/policies
    ssl: false
  ## If following property is set, an existing secret will be used to retrieve the mongodb connectionUris from.
  # uriSecret: my-uri-secret

## ingress configuration
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/tls-acme: "true"
    # ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: ditto.example.com
      paths: []
        # - /api
        # - /ws
        # - /devops
        # - /status
        # - /health
        # - /apidoc

  tls: []
  #  - secretName: ditto-tls
  #    hosts:
  #      - ditto.example.com

## OpenShift deployment
openshift:
  enabled: false
  ## OpenShift Routes
  routes:
    enabled: false
    annotations: {}
    # host: ""
    targetPort: http
    # tlsTermination: "edge"
    # tlsInsecurePolicy: "Redirect"
  securityContext: {}

## ----------------------------------------------------------------------------
## global configuration shared by all components
global:
  # Nginx Basic Auth config
  # either configure one or more basic auth user in the basicAuthUsers section
  # where you can specify username and password in clear text
  # or use the hashedBasicAuthUsers section where you can add already hashed username/password combinations
  # default basic auth user used for authentication in nginx is ditto with password ditto
  # add more users to the basicAuthUsers array or replace the default user
  basicAuthUsers:
    ditto:
      user: ditto
      password: ditto
  # alternative: add already hashed username and password combinations
  hashedBasicAuthUsers: []
  #  - ditto:A6BgmB8IEtPTs
  ## jwtOnly controls whether only OpenID-Connect authentication is supported
  ## if false, basicAuth is used
  ## ref: https://www.eclipse.org/ditto/installation-operating.html#openid-connect
  jwtOnly: false
  ## JVM options applied to all Ditto services running in the JVM, is put in JAVA_TOOL_OPTIONS
  jvmOptions: "-XX:ActiveProcessorCount=2 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=150 -Dakka.coordinated-shutdown.exit-jvm=on"
  ## timezone
  timezone: Europe/Berlin
  ## imagePullSecrets will be added to every deployment
  imagePullSecrets: []
  prometheus:
    ## enabled controls whether scrape config annotation will be added to pod templates
    enabled: true
    ## port where prometheus metrics will be provided
    port: 9095
  ## logging configuration for ditto
  logging:
    # by default, log everything to SYSOUT:
    sysout:
      enabled: true
    ## configure if logs should be pushed to a logstash endpoint
    logstash:
      enabled: false
      endpoint: ""
    ## enable writing logs to log files
    ## log files can be found on the host under /var/log/ditto
    logFiles:
      enabled: false

## ----------------------------------------------------------------------------
## akka actor configuration
## ref: https://doc.akka.io/docs/akka/current/typed/index.html
akka:
  ## actorSystemName
  actorSystemName: ditto-cluster
  remoting:
    ## port for remoting
    port: 2551
  mgmthttp:
    ## port for http management
    port: 8558

# Set "dittoTag" in order to specify another Ditto version to use for all Ditto services:
# you may also use "1" (for latest Ditto 1.x.x) or "1.5" (for latest Ditto 1.5.x)
# dittoTag: 2.4.1

## ----------------------------------------------------------------------------
## concierge configuration
## ref: https://www.eclipse.org/ditto/architecture-services-concierge.html
concierge:
  ## enabled controls whether Concierge related resources should be created
  enabled: true
  ## replicaCount for concierge service
  replicaCount: 1
  ## updateStrategy for concierge service
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 45
  ## additionalLabels on concierge pods
  additionalLabels: {}
  ## additionalAnnotations on concierge pods
  additionalAnnotations: {}
  image:
    ## repository for the concierge docker image
    repository: docker.io/eclipse/ditto-concierge
    ## tag for the concierge docker image - overwrite to specify something else than Chart.AppVersion
    # tag: 2.4.1
    ## pullPolicy for the concierge docker image
    pullPolicy: IfNotPresent
  ## additional JVM options to put into JAVA_TOOL_OPTIONS
  additionalJvmOptions: ""
  ## systemProps used to define arbitrary system properties for concierge service
  ## ref: https://www.eclipse.org/ditto/installation-operating.html#configuration
  systemProps:
    - "-Dakka.cluster.failure-detector.threshold=15.0"
    - "-Dakka.cluster.failure-detector.expected-response-after=10s"
    - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
    - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
  ## extraEnv to add arbitrary environment variable to concierge container
  extraEnv: []
  ## resources for the concierge container
  resources:
    requests:
      cpu: 150m
      memory: 512Mi
    limits:
      # ## no cpu limit to avoid CFS scheduler limits
      # ref: https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
      # cpu: ""
      memory: 512Mi
  ## readinessProbe configuration for concierge
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  readinessProbe:
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
  ## livenessProbe configuration for concierge
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  livenessProbe:
    initialDelaySeconds: 160
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 4
  networkPolicy:
    ## enabled controls whether concierge related NetworkPolicy should be created
    enabled: true
  podDisruptionBudget:
    ## enabled controls whether concierge related PodDisruptionBudget should be created
    enabled: true
    ## minAvailable number of replicas during voluntary disruptions
    minAvailable: 1
  ## nodeSelector
  ## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}
  ## tolerations
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## podMonitor configuration for concierge
  ## when enabled podMonitor resource to scrape concierge will be created
  podMonitor:
    enabled: false
  #  interval: 30s
  #  scrapeTimeout: 15s

## ----------------------------------------------------------------------------
## connectivity configuration
## ref: https://www.eclipse.org/ditto/architecture-services-connectivity.html
connectivity:
  ## enabled controls whether connectivity related resources should be created
  enabled: true
  ## replicaCount for connectivity service
  replicaCount: 1
  ## updateStrategy for connectivity service
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 45
  ## additionalLabels on connectivity pods
  additionalLabels: {}
  ## additionalAnnotations on connectivity pods
  additionalAnnotations: {}
  image:
    ## repository for the connectivity docker image
    repository: docker.io/eclipse/ditto-connectivity
    ## tag for the connectivity docker image - overwrite to specify something else than Chart.AppVersion
    # tag: 2.4.1
    ## pullPolicy for the connectivity docker image
    pullPolicy: IfNotPresent
  ## additional JVM options to put into JAVA_TOOL_OPTIONS
  additionalJvmOptions: ""
  ## systemProps used to define arbitrary system properties for connectivity service
  ## ref: https://www.eclipse.org/ditto/installation-operating.html#configuration
  systemProps:
    - "-Dakka.cluster.distributed-data.durable.lmdb.dir=/var/tmp/ddata"
    - "-Dakka.cluster.failure-detector.threshold=15.0"
    - "-Dakka.cluster.failure-detector.expected-response-after=10s"
    - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
    - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
  ## extraEnv to add arbitrary environment variable to connectivity container
  extraEnv:
    - name: CONNECTIVITY_CONNECTION_BLOCKED_HOSTNAMES
      value: ""
  ## resources for the connectivity container
  resources:
    requests:
      cpu: 150m
      memory: 768Mi
    limits:
      # ## no cpu limit to avoid CFS scheduler limits
      # ref: https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
      # cpu: ""
      memory: 768Mi
  ## readinessProbe configuration for connectivity
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  readinessProbe:
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
  ## livenessProbe configuration for connectivity
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  livenessProbe:
    initialDelaySeconds: 160
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 4
  networkPolicy:
    ## enabled controls whether connectivity related NetworkPolicy should be created
    enabled: true
  podDisruptionBudget:
    ## enabled controls whether connectivity related PodDisruptionBudget should be created
    enabled: true
    ## minAvailable number of replicas during voluntary disruptions
    minAvailable: 1
  ## nodeSelector
  ## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}
  ## tolerations
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## podMonitor configuration for connectivity
  ## when enabled podMonitor resource to scrape connectivity will be created
  podMonitor:
    enabled: false
  #  interval: 30s
  #  scrapeTimeout: 15s

## ----------------------------------------------------------------------------
## gateway configuration
## ref: https://www.eclipse.org/ditto/architecture-services-gateway.html
gateway:
  ## enabled controls whether gateway related resources should be created
  enabled: true
  ## devopsSecureStatus is used as value for DEVOPS_SECURE_STATUS environment var
  ## this controls whether /status resource is secured or not
  devopsSecureStatus: false
  ## enablePreAuthentication is used as value for ENABLE_PRE_AUTHENTICATION environment var
  enablePreAuthentication: true
  ## devopsPassword will be used for accessing /devops resource (username: devops)
  ## if not set a random password will be set
  devopsPassword:
  ## statusPassword will be used for accessing /status resource (username: devops)
  ## if not set a random password will be set
  statusPassword:
  ## replicaCount for gateway service
  replicaCount: 1
  ## updateStrategy for gateway service
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 45
  ## additionalLabels on gateway pods
  additionalLabels: {}
  ## additionalAnnotations on gateway pods
  additionalAnnotations: {}
  ## additional JVM options to put into JAVA_TOOL_OPTIONS
  additionalJvmOptions: ""
  image:
    ## repository for the gateway docker image
    repository: docker.io/eclipse/ditto-gateway
    ## tag for the gateway docker image - overwrite to specify something else than Chart.AppVersion
    # tag: 2.4.1
    ## pullPolicy for the gateway docker image
    pullPolicy: IfNotPresent
  ## systemProps used to define arbitrary system properties for gateway service
  ## ref: https://www.eclipse.org/ditto/installation-operating.html#configuration
  systemProps:
    - "-Dakka.cluster.failure-detector.threshold=15.0"
    - "-Dakka.cluster.failure-detector.expected-response-after=10s"
    - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
    - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
  ## extraEnv to add arbitrary environment variables to gateway container
  extraEnv: []
    # - name: LOG_LEVEL_APPLICATION
    #   value: "DEBUG"
  ## resources for the gateway container
  resources:
    requests:
      cpu: 150m
      memory: 512Mi
    limits:
      # ## no cpu limit to avoid CFS scheduler limits
      # ref: https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
      # cpu: ""
      memory: 512Mi
  ## readinessProbe configuration for gateway
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  readinessProbe:
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
  ## livenessProbe configuration for gateway
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  livenessProbe:
    initialDelaySeconds: 160
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 4
  service:
    ## port number for gateway service
    port: 8080
    ## annotations to add arbitrary annotations to nginx service
    annotations: {}
  networkPolicy:
    ## enabled controls whether gateway related NetworkPolicy should be created
    enabled: true
  podDisruptionBudget:
    ## enabled controls whether gateway related PodDisruptionBudget should be created
    enabled: true
    ## minAvailable number of replicas during voluntary disruptions
    minAvailable: 1
  ## nodeSelector
  ## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}
  ## tolerations
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## podMonitor configuration for gateway
  ## when enabled podMonitor resource to scrape concierge will be created
  podMonitor:
    enabled: false
  #  interval: 30s
  #  scrapeTimeout: 15s

## ----------------------------------------------------------------------------
## nginx configuration
nginx:
  ## enabled controls whether nginx related resources should be created
  enabled: true
  ## replicaCount for nginx
  replicaCount: 1
  ## updateStrategy for nginx
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  ## additionalLabels on nginx pods
  additionalLabels: {}
  ## additionalAnnotations on nginx pods
  additionalAnnotations: {}
  image:
    ## repository for the nginx docker image
    repository: docker.io/nginx
    ## tag for the nginx docker image
    tag: 1.23.1-alpine
    ## pullPolicy for the nginx docker image
    pullPolicy: IfNotPresent
  ## extraEnv to add arbitrary environment variables to nginx container
  extraEnv: []
  ## resources for the nginx container
  resources:
    requests:
      memory: 16Mi
  ## readinessProbe configuration for nginx
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  readinessProbe: {}
  ## livenessProbe configuration for nginx
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  livenessProbe: {}
  service:
    ## type of the nginx service
    type: ClusterIP
    ## port of the nginx service
    port: 8080
    ## in case of <type> NodePort the <nodePort> may additionally be set
    # type: NodePort
    # nodePort: 30080
    ## annotations to add arbitrary annotations to nginx service
    annotations: {}
  networkPolicy:
    ## enabled controls whether policies related NetworkPolicy should be created
    enabled: true
  ## nodeSelector
  ## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}
  ## tolerations
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  # init containers for nginx
  initContainers:
    waitForGateway:
      name: wait-for-gateway
      image: curlimages/curl:latest


## ----------------------------------------------------------------------------
## policies configuration
## ref: https://www.eclipse.org/ditto/architecture-services-policies.html
policies:
  ## enabled controls whether policies related resources should be created
  enabled: true
  ## replicaCount for policies service
  replicaCount: 1
  ## updateStrategy for policies service
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 45
  ## additionalLabels on policies pods
  additionalLabels: {}
  ## additionalAnnotations on policies pods
  additionalAnnotations: {}
  image:
    ## repository for the policies docker image
    repository: docker.io/eclipse/ditto-policies
    ## tag for the policies docker image - overwrite to specify something else than Chart.AppVersion
    # tag: 2.4.1
    ## pullPolicy for the policies docker image
    pullPolicy: IfNotPresent
  ## additional JVM options to put into JAVA_TOOL_OPTIONS
  additionalJvmOptions: ""
  ## systemProps used to define arbitrary system properties for policies service
  ## ref: https://www.eclipse.org/ditto/installation-operating.html#configuration
  systemProps:
    - "-Dakka.cluster.failure-detector.threshold=15.0"
    - "-Dakka.cluster.failure-detector.expected-response-after=10s"
    - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
    - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
  ## extraEnv to add arbitrary environment variable to policies container
  extraEnv: []
  ## resources for the policies container
  resources:
    requests:
      cpu: 150m
      memory: 512Mi
    limits:
      # ## no cpu limit to avoid CFS scheduler limits
      # ref: https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
      # cpu: ""
      memory: 512Mi
  ## readinessProbe configuration for policies
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  readinessProbe:
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
  ## livenessProbe configuration for policies
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  livenessProbe:
    initialDelaySeconds: 160
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 4
  networkPolicy:
    ## enabled controls whether policies related NetworkPolicy should be created
    enabled: true
  podDisruptionBudget:
    ## enabled controls whether policies related PodDisruptionBudget should be created
    enabled: true
    ## minAvailable number of replicas during voluntary disruptions
    minAvailable: 1
  ## nodeSelector
  ## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}
  ## tolerations
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## podMonitor configuration for policies
  ## when enabled podMonitor resource to scrape policies will be created
  podMonitor:
    enabled: false
  #  interval: 30s
  #  scrapeTimeout: 15s

## ----------------------------------------------------------------------------
## swaggerui configuration
swaggerui:
  ## enabled controls whether swagger ui related resources should be created
  enabled: true
  ## replicaCount for swagger ui service
  replicaCount: 1
  ## updateStrategy for swagger ui service
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  ## additionalLabels on swagger ui pods
  additionalLabels: {}
  ## additionalAnnotations on swagger ui pods
  additionalAnnotations: {}
  image:
    ## repository for the swagger ui docker image
    repository: docker.io/swaggerapi/swagger-ui
    ## tag for the swagger ui docker image
    tag: v4.6.1
    ## pullPolicy for the swagger ui docker image
    pullPolicy: IfNotPresent
  ## extraEnv to add arbitrary environment variable to swagger ui container
  extraEnv: []
  ## resources for the swagger ui container
  resources:
    requests:
      memory: 16Mi
  networkPolicy:
    ## enabled controls whether swagger ui related NetworkPolicy should be created
    enabled: true
  podDisruptionBudget:
    ## enabled controls whether swagger ui related PodDisruptionBudget should be created
    enabled: true
    ## minAvailable number of replicas during voluntary disruptions
    minAvailable: 1
  service:
    ## port of the swaggerui service
    port: 8080
    ## annotations to add arbitrary annotations to swaggerui service
    annotations: {}

## ----------------------------------------------------------------------------
## things configuration
## ref: https://www.eclipse.org/ditto/architecture-services-things.html
things:
  ## enabled controls whether things related resources should be created
  enabled: true
  ## replicaCount for things service
  replicaCount: 1
  ## updateStrategy for things service
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 45
  ## additionalLabels on things pods
  additionalLabels: {}
  ## additionalAnnotations on things pods
  additionalAnnotations: {}
  image:
    ## repository for the things docker image
    repository: docker.io/eclipse/ditto-things
    ## tag for the things docker image- overwrite to specify something else than Chart.AppVersion
    # tag: 2.4.1
    ## pullPolicy for the things docker image
    pullPolicy: IfNotPresent
  ## additional JVM options to put into JAVA_TOOL_OPTIONS
  additionalJvmOptions: ""
  ## systemProps used to define arbitrary system properties for things service
  ## ref: https://www.eclipse.org/ditto/installation-operating.html#configuration
  systemProps:
    - "-Dakka.cluster.failure-detector.threshold=15.0"
    - "-Dakka.cluster.failure-detector.expected-response-after=10s"
    - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
    - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
  ## extraEnv to add arbitrary environment variable to things container
  extraEnv: []
  ## resources for the things container
  resources:
    requests:
      cpu: 150m
      memory: 512Mi
    limits:
      # ## no cpu limit to avoid CFS scheduler limits
      # ref: https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
      # cpu: ""
      memory: 512Mi
  ## readinessProbe configuration for things
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  readinessProbe:
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
  ## livenessProbe configuration for things
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  livenessProbe:
    initialDelaySeconds: 160
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 4
  networkPolicy:
    ## enabled controls whether things related NetworkPolicy should be created
    enabled: true
  podDisruptionBudget:
    ## enabled controls whether things related PodDisruptionBudget should be created
    enabled: true
    ## minAvailable number of replicas during voluntary disruptions
    minAvailable: 1
  ## nodeSelector
  ## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}
  ## tolerations
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## podMonitor configuration for things
  ## when enabled podMonitor resource to scrape things will be created
  podMonitor:
    enabled: false
  #  interval: 30s
  #  scrapeTimeout: 15s

## ----------------------------------------------------------------------------
## things-search configuration
## ref: https://www.eclipse.org/ditto/architecture-services-things-search.html
thingsSearch:
  ## enabled controls whether things-search related resources should be created
  enabled: true
  ## replicaCount for things-search service
  replicaCount: 1
  ## updateStrategy for things-search service
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 45
  ## additionalLabels on things-search pods
  additionalLabels: {}
  ## additionalAnnotations on things-search pods
  additionalAnnotations: {}
  image:
    ## repository for the things-search docker image
    repository: docker.io/eclipse/ditto-things-search
    ## tag for the things-search docker image- overwrite to specify something else than Chart.AppVersion
    # tag: 2.4.1
    ## pullPolicy for the things-search docker image
    pullPolicy: IfNotPresent
  ## additional JVM options to put into JAVA_TOOL_OPTIONS
  additionalJvmOptions: ""
  ## systemProps used to define arbitrary system properties for things-search service
  ## ref: https://www.eclipse.org/ditto/installation-operating.html#configuration
  systemProps:
    - "-Dakka.cluster.failure-detector.threshold=15.0"
    - "-Dakka.cluster.failure-detector.expected-response-after=10s"
    - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
    - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
  ## extraEnv to add arbitrary environment variable to things-search container
  extraEnv: []
  ## resources for the things-search container
  resources:
    requests:
      cpu: 150m
      memory: 512Mi
    limits:
      # ## no cpu limit to avoid CFS scheduler limits
      # ref: https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
      # cpu: ""
      memory: 512Mi
  ## readinessProbe configuration for things-search
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  readinessProbe:
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
  ## livenessProbe configuration for things-search
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  livenessProbe:
    initialDelaySeconds: 160
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 4
  networkPolicy:
    ## enabled controls whether things-search related NetworkPolicy should be created
    enabled: true
  podDisruptionBudget:
    ## enabled controls whether things-search related PodDisruptionBudget should be created
    enabled: true
    ## minAvailable number of replicas during voluntary disruptions
    minAvailable: 1
  ## nodeSelector
  ## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}
  ## tolerations
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## podMonitor configuration for things-search
  ## when enabled podMonitor resource to scrape things-search will be created
  podMonitor:
    enabled: false
  #  interval: 30s
  #  scrapeTimeout: 15s

## ----------------------------------------------------------------------------
## mongodb dependency chart configuration
mongodb:
  ## enabled controls usage of dependency chart
  enabled: true
  fullnameOverride: ditto-mongodb
  auth:
    enabled: false
  securityContext:
    enabled: false
  persistence:
    enabled: false
