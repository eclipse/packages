{
  "targetActorSelection": "/system/sharding/connection",
  "headers": {
    "aggregate": false
  },
  "piggybackCommand": {
    "type": "connectivity.commands:createConnection",
    "connection": {
      "id": "eclipse-hono-via-kafka",
      "name": "eclipse-hono-via-kafka",
      "connectionType": "kafka",
      "connectionStatus": "open",
      "uri": "ssl://{{ .Values.honoConnection.username }}:{{ .Values.honoConnection.password }}@{{ .Release.Name }}-kafka-0:9092",
      "sources": [
        {
          "addresses": [
            "hono.telemetry.{{ .Values.demoDevice.tenant }}"
          ],
          "consumerCount": 1,
          "authorizationContext": [
            "pre-authenticated:hono-connection"
          ],
          "qos": 0,
          "enforcement": {
            "input": {{ "{{ header:device_id }}" | quote }},
            "filters": [
              {{ "{{ entity:id }}" | quote }}
            ]
          },
          "headerMapping": {},
          "payloadMapping": [],
          "replyTarget": {
            "enabled": true,
            "address": {{ printf "hono.command.%s/{{ thing:id }}" .Values.demoDevice.tenant | quote }},
            "headerMapping": {
              "device_id": {{ "{{ thing:id }}" | quote }},
              "subject": {{ "{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response" | quote }},
              "correlation-id": {{ "{{ header:correlation-id }}" | quote }}
            },
            "expectedResponseTypes": [
              "response",
              "error"
            ]
          },
          "acknowledgementRequests": {
            "includes": [],
            "filter": "fn:delete()"
          },
          "declaredAcks": []
        },
        {
          "addresses": [
            "hono.event.{{ .Values.demoDevice.tenant }}"
          ],
          "consumerCount": 1,
          "authorizationContext": [
            "pre-authenticated:hono-connection"
          ],
          "qos": 1,
          "enforcement": {
            "input": {{ "{{ header:device_id }}" | quote }},
            "filters": [
              {{ "{{ entity:id }}" | quote }}
            ]
          },
          "headerMapping": {},
          "payloadMapping": [],
          "replyTarget": {
            "enabled": true,
            "address": {{ printf "hono.command.%s/{{ thing:id }}" .Values.demoDevice.tenant | quote }},
            "headerMapping": {
              "device_id": {{ "{{ thing:id }}" | quote }},
              "subject": {{ "{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response" | quote }},
              "correlation-id": {{ "{{ header:correlation-id }}" | quote }}
            },
            "expectedResponseTypes": [
              "response",
              "error"
            ]
          },
          "acknowledgementRequests": {
            "includes": []
          },
          "declaredAcks": []
        },
        {
          "addresses": [
            "hono.command_response.{{ .Values.demoDevice.tenant }}"
          ],
          "consumerCount": 1,
          "authorizationContext": [
            "pre-authenticated:hono-connection"
          ],
          "qos": 0,
          "enforcement": {
            "input": {{ "{{ header:device_id }}" | quote }},
            "filters": [
              {{ "{{ entity:id }}" | quote }}
            ]
          },
          "headerMapping": {
            "correlation-id": {{ "{{ header:correlation-id }}" | quote }},
            "status": {{ "{{ header:status }}" | quote }}
          },
          "payloadMapping": [],
          "replyTarget": {
            "enabled": false,
            "expectedResponseTypes": [
              "response",
              "error"
            ]
          },
          "acknowledgementRequests": {
            "includes": [],
            "filter": "fn:delete()"
          },
          "declaredAcks": []
        }
      ],
      "targets": [
        {
          "address": {{ printf "hono.command.%s/{{ thing:id }}" .Values.demoDevice.tenant | quote }},
          "authorizationContext": [
            "pre-authenticated:hono-connection"
          ],
          "headerMapping": {
            "device_id": {{ "{{ thing:id }}" | quote }},
            "subject": {{ "{{ header:subject | fn:default(topic:action-subject) }}" | quote }},
            "correlation-id": {{ "{{ header:correlation-id }}" | quote }},
            "response-required": {{ "{{ header:response-required }}" | quote }}
          },
          "topics": [
            "_/_/things/live/commands",
            "_/_/things/live/messages"
          ]
        },
        {
          "address": {{ printf "hono.command.%s/{{thing:id}}" .Values.demoDevice.tenant | quote }},
          "authorizationContext": [
            "pre-authenticated:hono-connection"
          ],
          "topics": [
            "_/_/things/twin/events",
            "_/_/things/live/events"
          ],
          "headerMapping": {
            "device_id": {{ "{{ thing:id }}" | quote }},
            "subject": {{ "{{ header:subject | fn:default(topic:action-subject) }}" | quote }},
            "correlation-id": {{ "{{ header:correlation-id }}" | quote }}
          }
        }
      ],
      "specificConfig": {
        "saslMechanism": "plain",
        "bootstrapServers": "{{ .Release.Name }}-kafka-0:9092",
        "groupId": {{ printf "%s_{{ connection:id }}" .Values.demoDevice.tenant | quote }}
      },
      "clientCount": 1,
      "failoverEnabled": true,
      "validateCertificates": false
    }
  }
}
